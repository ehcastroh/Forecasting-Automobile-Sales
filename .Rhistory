x = matrix ( data = c (1 ,2 ,3 ,4) , nrow =2 , ncol =2) # logically equivalent to x <- matrix(c(1,2,3,4), 2, 2)
x
matrix(c(1,2,3,4),2,2,byrow=TRUE)
m <- 3 # just some arbitrary number so that our random variables can be replicated for peer review purposes
set.seed(m)
y = rnorm (100)
summary(y)
mean(y)
x = rnorm (100)
y = rnorm (100)
plot (x , y)
plot (x ,y , xlab =" this is the x - axis " , ylab =" this is the y - axis " , main =" Plot of X vs Y ")
plot (x ,y , col =" green ")
x = rnorm (100)
plot (x , y)
plot (x ,y , col =" green ")
dev . off ()
A = matrix (1:16 ,4 ,4)
A[2,2
]
A
source('~/IEOR_142/Assingnments/HW1/HW1_Elias_Castro_Hernandez.R')
library(dplyr)
library(ggplot2)
library(GGally)
library(car)
elantra <- read.csv("Elantra142-Fall2017.csv")
View(elantra)
elantra.train <- filter(elantra, Year < 2015)
elantra.test <- filter(elantra, Year > 2014)
View(elantra.train)
View(elantra.test)
ElantraSales <- lm(ElantraSales ~ Unemployment + ElantraQueries + CPI.Energy + CPI.All, data = elantra.train)
summary(ElantraSales)
setwd("~/castroDataScience|Fintech/Forecasting Automobile Sales")
elantra <- read.csv("Elantra142-Fall2017.csv")
View(elantra)
elantra.train <- filter(elantra, Year < 2015)
elantra.test <- filter(elantra, Year > 2014)
View(elantra.train)
ElantraSales <- lm(ElantraSales ~ Unemployment + ElantraQueries + CPI.Energy + CPI.All, data = elantra.train)
summary(ElantraSales)
ggcoef(
ElantraSales,
vline_color = "red",
vline_linetype =  "solid",
errorbar_color = "blue",
errorbar_height = .25,
exclude_intercept = TRUE
)
vif(ElantraSales)
sub_ElantraSales <- lm(ElantraSales ~ ElantraQueries + CPI.All, data = elantra.train)
summary(sub_ElantraSales)
ggcoef(
sub_ElantraSales,
vline_color = "red",
vline_linetype =  "solid",
errorbar_color = "orange",
errorbar_height = .25,
exclude_intercept = TRUE
)
vif(sub_ElantraSales)
predictions_ElantraSales <- predict(sub_ElantraSales, newdata=elantra.test)
summary(predictions_ElantraSales)
SSE_a = sum((elantra.test$ElantraSales - predictions_ElantraSales)^2)
SST_a = sum((elantra.test$ElantraSales - mean(elantra.train$ElantraSales))^2)
OSR2_a = 1 - SSE_a/SST_a
OSR2_a
elantra_plot <- read.csv("Elantra142-Fall2017-RGDP.csv")
View(elantra_plot)
ggplot(elantra_plot, aes(x = MonthNumeric, y = ElantraSales, color = MonthFactor)) +
geom_point() + xlab("2010 through 2017") + ylab("Elantra Units Sold")
seasonal_ES <- lm(ElantraSales ~ MonthFactor + Unemployment +
ElantraQueries + CPI.Energy + CPI.All, data = elantra.train)
ggcoef(
seasonal_ES,
vline_color = "red",
vline_linetype =  "solid",
errorbar_color = "blue",
errorbar_height = .25,
exclude_intercept = TRUE)
vif(seasonal_ES)
seasonal_ES2 <- lm(ElantraSales ~ MonthFactor + ElantraQueries + CPI.Energy + CPI.All, data = elantra.train)
vif(seasonal_ES2)
seasonal_ES3 <- lm(ElantraSales ~ MonthFactor + ElantraQueries + CPI.All, data = elantra.train)
vif(seasonal_ES3)
ggcoef(seasonal_ES3, vline_color = "red", vline_linetype =  "solid", errorbar_color = "blue", errorbar_height = .25, exclude_intercept = TRUE)
prediction_seasonal_ES <- predict(seasonal_ES3, newdata=elantra.test)
summary(prediction_seasonal_ES)
SSE_b = sum((elantra.test$ElantraSales - prediction_seasonal_ES)^2)
SST_b = sum((elantra.test$ElantraSales - mean(elantra.train$ElantraSales))^2)
OSR2_b = 1 - SSE_b/SST_b
OSR2_b
combination_ES <- lm(ElantraSales ~ MonthFactor + CPI.All, data = elantra.train)
vif(combination_ES)
ggcoef(combination_ES, vline_color = "red", vline_linetype =  "solid", errorbar_color = "blue", errorbar_height = .25, exclude_intercept = TRUE)
summary(combination_ES)
prediction_combination_ES <- predict(combination_ES, newdata=elantra.test)
summary(prediction_combination_ES)
SSE_c = sum((elantra.test$ElantraSales - prediction_combination_ES)^2)
SST_c = sum((elantra.test$ElantraSales - mean(elantra.train$ElantraSales))^2)
OSR2_c = 1 - SSE_c/SST_c
OSR2_c
elantra3 <- read.csv("Elantra142-Fall2017-RGDP2.csv")
View(elantra3)
ggcoef(combination_ES, vline_color = "red", vline_linetype =  "solid", errorbar_color = "blue", errorbar_height = .25, exclude_intercept = TRUE)
vif(combination_ES)
ggcoef(combination_ES, vline_color = "red", vline_linetype =  "solid", errorbar_color = "blue", errorbar_height = .25, exclude_intercept = TRUE)
summary(combination_ES)
prediction_combination_ES <- predict(combination_ES, newdata=elantra.test)
summary(prediction_combination_ES)
SSE_c = sum((elantra.test$ElantraSales - prediction_combination_ES)^2)
SST_c = sum((elantra.test$ElantraSales - mean(elantra.train$ElantraSales))^2)
OSR2_c = 1 - SSE_c/SST_c
OSR2_c
elantra3 <- read.csv("Elantra142-Fall2017-RGDP2.csv")
View(elantra3)
elantra3.train <- filter(elantra3, Year < 2015)
elantra3.test <- filter(elantra3, Year > 2014)
View(elantra3.train)
custom_ES3 <- lm(ElantraSales ~ MonthFactor + ElantraQueries + CPI.Energy + RGDP, data = elantra3.train)
vif(custom_ES3)
ggcoef(custom_ES3, vline_color = "red", vline_linetype =  "solid", errorbar_color = "blue", errorbar_height = .25, exclude_intercept = TRUE)
summary(custom_ES3)
prediction_custom_ES <- predict(custom_ES3, newdata=elantra3.test)
summary(prediction_custom_ES)
SSE_d = sum((elantra3.test$ElantraSales - prediction_custom_ES)^2)
SST_d = sum((elantra3.test$ElantraSales - mean(elantra3.train$ElantraSales))^2)
OSR2_d = 1 - SSE_d/SST_d
OSR2_d
summary(seasonal_ES3)
summary(combination_ES)
i <- 92
j <- 244.03
act <- 15127
Aug2017_ES_combined <- ((-84309.21) - 7011.47*(0) - 5063.52*(0) + 446.33*(0) + 416.636*(0) - 496.86*(0) + 696.16*(0)
- 2.97*(1) - 3122.47*(0) - 6600.71*(0) - 6039.35*(0) - 2505.80*(0) + 452.00*(j))
Error <- abs(Aug2017_ES_combined - act)
Error
